//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WareHoseSchool.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IService1", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback addProductTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllProductTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback addProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllProductsByTypeIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback addProductToCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeProductFromCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllProductsInCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllProductsInCardByProducIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllProductsInCardByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllProductsInCardByProductTypeIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback addOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateOrderStatusClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateOrderStatusBackendOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllOdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllOrdersByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllClientStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllBackEndStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::WareHoseSchool.Properties.Settings.Default.WareHoseSchool_localhost_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RegisterCompletedEventHandler RegisterCompleted;
        
        /// <remarks/>
        public event loginCompletedEventHandler loginCompleted;
        
        /// <remarks/>
        public event getUsersCompletedEventHandler getUsersCompleted;
        
        /// <remarks/>
        public event addProductTypeCompletedEventHandler addProductTypeCompleted;
        
        /// <remarks/>
        public event updateProductCompletedEventHandler updateProductCompleted;
        
        /// <remarks/>
        public event deleteProductCompletedEventHandler deleteProductCompleted;
        
        /// <remarks/>
        public event getAllProductTypesCompletedEventHandler getAllProductTypesCompleted;
        
        /// <remarks/>
        public event addProductCompletedEventHandler addProductCompleted;
        
        /// <remarks/>
        public event getAllProductsCompletedEventHandler getAllProductsCompleted;
        
        /// <remarks/>
        public event getAllProductsByTypeIdCompletedEventHandler getAllProductsByTypeIdCompleted;
        
        /// <remarks/>
        public event addProductToCardCompletedEventHandler addProductToCardCompleted;
        
        /// <remarks/>
        public event removeProductFromCardCompletedEventHandler removeProductFromCardCompleted;
        
        /// <remarks/>
        public event getAllProductsInCardCompletedEventHandler getAllProductsInCardCompleted;
        
        /// <remarks/>
        public event getAllProductsInCardByProducIdCompletedEventHandler getAllProductsInCardByProducIdCompleted;
        
        /// <remarks/>
        public event getAllProductsInCardByUserIdCompletedEventHandler getAllProductsInCardByUserIdCompleted;
        
        /// <remarks/>
        public event getAllProductsInCardByProductTypeIdCompletedEventHandler getAllProductsInCardByProductTypeIdCompleted;
        
        /// <remarks/>
        public event addOrderCompletedEventHandler addOrderCompleted;
        
        /// <remarks/>
        public event updateOrderStatusClientCompletedEventHandler updateOrderStatusClientCompleted;
        
        /// <remarks/>
        public event updateOrderStatusBackendCompletedEventHandler updateOrderStatusBackendCompleted;
        
        /// <remarks/>
        public event getAllOdersCompletedEventHandler getAllOdersCompleted;
        
        /// <remarks/>
        public event getAllOrdersByUserIdCompletedEventHandler getAllOrdersByUserIdCompleted;
        
        /// <remarks/>
        public event getAllClientStatusCompletedEventHandler getAllClientStatusCompleted;
        
        /// <remarks/>
        public event getAllBackEndStatusCompletedEventHandler getAllBackEndStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/Register", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Register([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string firstName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lastName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string emailAddress, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contactNumber, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string authenticationLecel) {
            this.Invoke("Register", new object[] {
                        firstName,
                        lastName,
                        emailAddress,
                        contactNumber,
                        password,
                        authenticationLecel});
        }
        
        /// <remarks/>
        public void RegisterAsync(string firstName, string lastName, string emailAddress, string contactNumber, string password, string authenticationLecel) {
            this.RegisterAsync(firstName, lastName, emailAddress, contactNumber, password, authenticationLecel, null);
        }
        
        /// <remarks/>
        public void RegisterAsync(string firstName, string lastName, string emailAddress, string contactNumber, string password, string authenticationLecel, object userState) {
            if ((this.RegisterOperationCompleted == null)) {
                this.RegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterOperationCompleted);
            }
            this.InvokeAsync("Register", new object[] {
                        firstName,
                        lastName,
                        emailAddress,
                        contactNumber,
                        password,
                        authenticationLecel}, this.RegisterOperationCompleted, userState);
        }
        
        private void OnRegisterOperationCompleted(object arg) {
            if ((this.RegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void login([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string emailAdress, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, out bool loginResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool loginResultSpecified, out int userID, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool userIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string authinticationLevel) {
            object[] results = this.Invoke("login", new object[] {
                        emailAdress,
                        password});
            loginResult = ((bool)(results[0]));
            loginResultSpecified = ((bool)(results[1]));
            userID = ((int)(results[2]));
            userIDSpecified = ((bool)(results[3]));
            authinticationLevel = ((string)(results[4]));
        }
        
        /// <remarks/>
        public void loginAsync(string emailAdress, string password) {
            this.loginAsync(emailAdress, password, null);
        }
        
        /// <remarks/>
        public void loginAsync(string emailAdress, string password, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        emailAdress,
                        password}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WareHouseSchool_Service")]
        public User[] getUsers() {
            object[] results = this.Invoke("getUsers", new object[0]);
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void getUsersAsync() {
            this.getUsersAsync(null);
        }
        
        /// <remarks/>
        public void getUsersAsync(object userState) {
            if ((this.getUsersOperationCompleted == null)) {
                this.getUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUsersOperationCompleted);
            }
            this.InvokeAsync("getUsers", new object[0], this.getUsersOperationCompleted, userState);
        }
        
        private void OngetUsersOperationCompleted(object arg) {
            if ((this.getUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUsersCompleted(this, new getUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/addProductType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addProductType([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string productCategory, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string productTypeName) {
            this.Invoke("addProductType", new object[] {
                        productCategory,
                        productTypeName});
        }
        
        /// <remarks/>
        public void addProductTypeAsync(string productCategory, string productTypeName) {
            this.addProductTypeAsync(productCategory, productTypeName, null);
        }
        
        /// <remarks/>
        public void addProductTypeAsync(string productCategory, string productTypeName, object userState) {
            if ((this.addProductTypeOperationCompleted == null)) {
                this.addProductTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddProductTypeOperationCompleted);
            }
            this.InvokeAsync("addProductType", new object[] {
                        productCategory,
                        productTypeName}, this.addProductTypeOperationCompleted, userState);
        }
        
        private void OnaddProductTypeOperationCompleted(object arg) {
            if ((this.addProductTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addProductTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/updateProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateProduct(int productId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool productIdSpecified, int productTypeId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool productTypeIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string description, double price, [System.Xml.Serialization.XmlIgnoreAttribute()] bool priceSpecified, int quantity, [System.Xml.Serialization.XmlIgnoreAttribute()] bool quantitySpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string image64String) {
            this.Invoke("updateProduct", new object[] {
                        productId,
                        productIdSpecified,
                        productTypeId,
                        productTypeIdSpecified,
                        description,
                        price,
                        priceSpecified,
                        quantity,
                        quantitySpecified,
                        image64String});
        }
        
        /// <remarks/>
        public void updateProductAsync(int productId, bool productIdSpecified, int productTypeId, bool productTypeIdSpecified, string description, double price, bool priceSpecified, int quantity, bool quantitySpecified, string image64String) {
            this.updateProductAsync(productId, productIdSpecified, productTypeId, productTypeIdSpecified, description, price, priceSpecified, quantity, quantitySpecified, image64String, null);
        }
        
        /// <remarks/>
        public void updateProductAsync(int productId, bool productIdSpecified, int productTypeId, bool productTypeIdSpecified, string description, double price, bool priceSpecified, int quantity, bool quantitySpecified, string image64String, object userState) {
            if ((this.updateProductOperationCompleted == null)) {
                this.updateProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateProductOperationCompleted);
            }
            this.InvokeAsync("updateProduct", new object[] {
                        productId,
                        productIdSpecified,
                        productTypeId,
                        productTypeIdSpecified,
                        description,
                        price,
                        priceSpecified,
                        quantity,
                        quantitySpecified,
                        image64String}, this.updateProductOperationCompleted, userState);
        }
        
        private void OnupdateProductOperationCompleted(object arg) {
            if ((this.updateProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateProductCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/deleteProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteProduct(int productId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool productIdSpecified) {
            this.Invoke("deleteProduct", new object[] {
                        productId,
                        productIdSpecified});
        }
        
        /// <remarks/>
        public void deleteProductAsync(int productId, bool productIdSpecified) {
            this.deleteProductAsync(productId, productIdSpecified, null);
        }
        
        /// <remarks/>
        public void deleteProductAsync(int productId, bool productIdSpecified, object userState) {
            if ((this.deleteProductOperationCompleted == null)) {
                this.deleteProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteProductOperationCompleted);
            }
            this.InvokeAsync("deleteProduct", new object[] {
                        productId,
                        productIdSpecified}, this.deleteProductOperationCompleted, userState);
        }
        
        private void OndeleteProductOperationCompleted(object arg) {
            if ((this.deleteProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteProductCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getAllProductTypes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WareHouseSchool_Service")]
        public ProductType[] getAllProductTypes() {
            object[] results = this.Invoke("getAllProductTypes", new object[0]);
            return ((ProductType[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllProductTypesAsync() {
            this.getAllProductTypesAsync(null);
        }
        
        /// <remarks/>
        public void getAllProductTypesAsync(object userState) {
            if ((this.getAllProductTypesOperationCompleted == null)) {
                this.getAllProductTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllProductTypesOperationCompleted);
            }
            this.InvokeAsync("getAllProductTypes", new object[0], this.getAllProductTypesOperationCompleted, userState);
        }
        
        private void OngetAllProductTypesOperationCompleted(object arg) {
            if ((this.getAllProductTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllProductTypesCompleted(this, new getAllProductTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/addProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addProduct(int productTypeId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool productTypeIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string description, double price, [System.Xml.Serialization.XmlIgnoreAttribute()] bool priceSpecified, int quantity, [System.Xml.Serialization.XmlIgnoreAttribute()] bool quantitySpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string image64String) {
            this.Invoke("addProduct", new object[] {
                        productTypeId,
                        productTypeIdSpecified,
                        description,
                        price,
                        priceSpecified,
                        quantity,
                        quantitySpecified,
                        image64String});
        }
        
        /// <remarks/>
        public void addProductAsync(int productTypeId, bool productTypeIdSpecified, string description, double price, bool priceSpecified, int quantity, bool quantitySpecified, string image64String) {
            this.addProductAsync(productTypeId, productTypeIdSpecified, description, price, priceSpecified, quantity, quantitySpecified, image64String, null);
        }
        
        /// <remarks/>
        public void addProductAsync(int productTypeId, bool productTypeIdSpecified, string description, double price, bool priceSpecified, int quantity, bool quantitySpecified, string image64String, object userState) {
            if ((this.addProductOperationCompleted == null)) {
                this.addProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddProductOperationCompleted);
            }
            this.InvokeAsync("addProduct", new object[] {
                        productTypeId,
                        productTypeIdSpecified,
                        description,
                        price,
                        priceSpecified,
                        quantity,
                        quantitySpecified,
                        image64String}, this.addProductOperationCompleted, userState);
        }
        
        private void OnaddProductOperationCompleted(object arg) {
            if ((this.addProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addProductCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getAllProducts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WareHouseSchool_Service")]
        public Product[] getAllProducts() {
            object[] results = this.Invoke("getAllProducts", new object[0]);
            return ((Product[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllProductsAsync() {
            this.getAllProductsAsync(null);
        }
        
        /// <remarks/>
        public void getAllProductsAsync(object userState) {
            if ((this.getAllProductsOperationCompleted == null)) {
                this.getAllProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllProductsOperationCompleted);
            }
            this.InvokeAsync("getAllProducts", new object[0], this.getAllProductsOperationCompleted, userState);
        }
        
        private void OngetAllProductsOperationCompleted(object arg) {
            if ((this.getAllProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllProductsCompleted(this, new getAllProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getAllProductsByTypeId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WareHouseSchool_Service")]
        public Product[] getAllProductsByTypeId(int productTypeId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool productTypeIdSpecified) {
            object[] results = this.Invoke("getAllProductsByTypeId", new object[] {
                        productTypeId,
                        productTypeIdSpecified});
            return ((Product[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllProductsByTypeIdAsync(int productTypeId, bool productTypeIdSpecified) {
            this.getAllProductsByTypeIdAsync(productTypeId, productTypeIdSpecified, null);
        }
        
        /// <remarks/>
        public void getAllProductsByTypeIdAsync(int productTypeId, bool productTypeIdSpecified, object userState) {
            if ((this.getAllProductsByTypeIdOperationCompleted == null)) {
                this.getAllProductsByTypeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllProductsByTypeIdOperationCompleted);
            }
            this.InvokeAsync("getAllProductsByTypeId", new object[] {
                        productTypeId,
                        productTypeIdSpecified}, this.getAllProductsByTypeIdOperationCompleted, userState);
        }
        
        private void OngetAllProductsByTypeIdOperationCompleted(object arg) {
            if ((this.getAllProductsByTypeIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllProductsByTypeIdCompleted(this, new getAllProductsByTypeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/addProductToCard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addProductToCard(int productId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool productIdSpecified, int ProductTypeId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool ProductTypeIdSpecified, int userId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool userIdSpecified, int quantity, [System.Xml.Serialization.XmlIgnoreAttribute()] bool quantitySpecified, decimal price, [System.Xml.Serialization.XmlIgnoreAttribute()] bool priceSpecified) {
            this.Invoke("addProductToCard", new object[] {
                        productId,
                        productIdSpecified,
                        ProductTypeId,
                        ProductTypeIdSpecified,
                        userId,
                        userIdSpecified,
                        quantity,
                        quantitySpecified,
                        price,
                        priceSpecified});
        }
        
        /// <remarks/>
        public void addProductToCardAsync(int productId, bool productIdSpecified, int ProductTypeId, bool ProductTypeIdSpecified, int userId, bool userIdSpecified, int quantity, bool quantitySpecified, decimal price, bool priceSpecified) {
            this.addProductToCardAsync(productId, productIdSpecified, ProductTypeId, ProductTypeIdSpecified, userId, userIdSpecified, quantity, quantitySpecified, price, priceSpecified, null);
        }
        
        /// <remarks/>
        public void addProductToCardAsync(int productId, bool productIdSpecified, int ProductTypeId, bool ProductTypeIdSpecified, int userId, bool userIdSpecified, int quantity, bool quantitySpecified, decimal price, bool priceSpecified, object userState) {
            if ((this.addProductToCardOperationCompleted == null)) {
                this.addProductToCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddProductToCardOperationCompleted);
            }
            this.InvokeAsync("addProductToCard", new object[] {
                        productId,
                        productIdSpecified,
                        ProductTypeId,
                        ProductTypeIdSpecified,
                        userId,
                        userIdSpecified,
                        quantity,
                        quantitySpecified,
                        price,
                        priceSpecified}, this.addProductToCardOperationCompleted, userState);
        }
        
        private void OnaddProductToCardOperationCompleted(object arg) {
            if ((this.addProductToCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addProductToCardCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/removeProductFromCard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeProductFromCard(int cardId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool cardIdSpecified) {
            this.Invoke("removeProductFromCard", new object[] {
                        cardId,
                        cardIdSpecified});
        }
        
        /// <remarks/>
        public void removeProductFromCardAsync(int cardId, bool cardIdSpecified) {
            this.removeProductFromCardAsync(cardId, cardIdSpecified, null);
        }
        
        /// <remarks/>
        public void removeProductFromCardAsync(int cardId, bool cardIdSpecified, object userState) {
            if ((this.removeProductFromCardOperationCompleted == null)) {
                this.removeProductFromCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveProductFromCardOperationCompleted);
            }
            this.InvokeAsync("removeProductFromCard", new object[] {
                        cardId,
                        cardIdSpecified}, this.removeProductFromCardOperationCompleted, userState);
        }
        
        private void OnremoveProductFromCardOperationCompleted(object arg) {
            if ((this.removeProductFromCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeProductFromCardCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getAllProductsInCard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WareHouseSchool_Service")]
        public ProductCard[] getAllProductsInCard() {
            object[] results = this.Invoke("getAllProductsInCard", new object[0]);
            return ((ProductCard[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllProductsInCardAsync() {
            this.getAllProductsInCardAsync(null);
        }
        
        /// <remarks/>
        public void getAllProductsInCardAsync(object userState) {
            if ((this.getAllProductsInCardOperationCompleted == null)) {
                this.getAllProductsInCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllProductsInCardOperationCompleted);
            }
            this.InvokeAsync("getAllProductsInCard", new object[0], this.getAllProductsInCardOperationCompleted, userState);
        }
        
        private void OngetAllProductsInCardOperationCompleted(object arg) {
            if ((this.getAllProductsInCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllProductsInCardCompleted(this, new getAllProductsInCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getAllProductsInCardByProducId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WareHouseSchool_Service")]
        public ProductCard[] getAllProductsInCardByProducId(int productId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool productIdSpecified) {
            object[] results = this.Invoke("getAllProductsInCardByProducId", new object[] {
                        productId,
                        productIdSpecified});
            return ((ProductCard[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllProductsInCardByProducIdAsync(int productId, bool productIdSpecified) {
            this.getAllProductsInCardByProducIdAsync(productId, productIdSpecified, null);
        }
        
        /// <remarks/>
        public void getAllProductsInCardByProducIdAsync(int productId, bool productIdSpecified, object userState) {
            if ((this.getAllProductsInCardByProducIdOperationCompleted == null)) {
                this.getAllProductsInCardByProducIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllProductsInCardByProducIdOperationCompleted);
            }
            this.InvokeAsync("getAllProductsInCardByProducId", new object[] {
                        productId,
                        productIdSpecified}, this.getAllProductsInCardByProducIdOperationCompleted, userState);
        }
        
        private void OngetAllProductsInCardByProducIdOperationCompleted(object arg) {
            if ((this.getAllProductsInCardByProducIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllProductsInCardByProducIdCompleted(this, new getAllProductsInCardByProducIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getAllProductsInCardByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WareHouseSchool_Service")]
        public ProductCard[] getAllProductsInCardByUserId(int userId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool userIdSpecified) {
            object[] results = this.Invoke("getAllProductsInCardByUserId", new object[] {
                        userId,
                        userIdSpecified});
            return ((ProductCard[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllProductsInCardByUserIdAsync(int userId, bool userIdSpecified) {
            this.getAllProductsInCardByUserIdAsync(userId, userIdSpecified, null);
        }
        
        /// <remarks/>
        public void getAllProductsInCardByUserIdAsync(int userId, bool userIdSpecified, object userState) {
            if ((this.getAllProductsInCardByUserIdOperationCompleted == null)) {
                this.getAllProductsInCardByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllProductsInCardByUserIdOperationCompleted);
            }
            this.InvokeAsync("getAllProductsInCardByUserId", new object[] {
                        userId,
                        userIdSpecified}, this.getAllProductsInCardByUserIdOperationCompleted, userState);
        }
        
        private void OngetAllProductsInCardByUserIdOperationCompleted(object arg) {
            if ((this.getAllProductsInCardByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllProductsInCardByUserIdCompleted(this, new getAllProductsInCardByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getAllProductsInCardByProductTypeId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WareHouseSchool_Service")]
        public ProductCard[] getAllProductsInCardByProductTypeId(int prodyctTypeId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool prodyctTypeIdSpecified) {
            object[] results = this.Invoke("getAllProductsInCardByProductTypeId", new object[] {
                        prodyctTypeId,
                        prodyctTypeIdSpecified});
            return ((ProductCard[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllProductsInCardByProductTypeIdAsync(int prodyctTypeId, bool prodyctTypeIdSpecified) {
            this.getAllProductsInCardByProductTypeIdAsync(prodyctTypeId, prodyctTypeIdSpecified, null);
        }
        
        /// <remarks/>
        public void getAllProductsInCardByProductTypeIdAsync(int prodyctTypeId, bool prodyctTypeIdSpecified, object userState) {
            if ((this.getAllProductsInCardByProductTypeIdOperationCompleted == null)) {
                this.getAllProductsInCardByProductTypeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllProductsInCardByProductTypeIdOperationCompleted);
            }
            this.InvokeAsync("getAllProductsInCardByProductTypeId", new object[] {
                        prodyctTypeId,
                        prodyctTypeIdSpecified}, this.getAllProductsInCardByProductTypeIdOperationCompleted, userState);
        }
        
        private void OngetAllProductsInCardByProductTypeIdOperationCompleted(object arg) {
            if ((this.getAllProductsInCardByProductTypeIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllProductsInCardByProductTypeIdCompleted(this, new getAllProductsInCardByProductTypeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/addOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addOrder(int ProductID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool ProductIDSpecified, int CardID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool CardIDSpecified, decimal OrderPrice, [System.Xml.Serialization.XmlIgnoreAttribute()] bool OrderPriceSpecified, int userId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool userIdSpecified, int productTypeId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool productTypeIdSpecified) {
            this.Invoke("addOrder", new object[] {
                        ProductID,
                        ProductIDSpecified,
                        CardID,
                        CardIDSpecified,
                        OrderPrice,
                        OrderPriceSpecified,
                        userId,
                        userIdSpecified,
                        productTypeId,
                        productTypeIdSpecified});
        }
        
        /// <remarks/>
        public void addOrderAsync(int ProductID, bool ProductIDSpecified, int CardID, bool CardIDSpecified, decimal OrderPrice, bool OrderPriceSpecified, int userId, bool userIdSpecified, int productTypeId, bool productTypeIdSpecified) {
            this.addOrderAsync(ProductID, ProductIDSpecified, CardID, CardIDSpecified, OrderPrice, OrderPriceSpecified, userId, userIdSpecified, productTypeId, productTypeIdSpecified, null);
        }
        
        /// <remarks/>
        public void addOrderAsync(int ProductID, bool ProductIDSpecified, int CardID, bool CardIDSpecified, decimal OrderPrice, bool OrderPriceSpecified, int userId, bool userIdSpecified, int productTypeId, bool productTypeIdSpecified, object userState) {
            if ((this.addOrderOperationCompleted == null)) {
                this.addOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddOrderOperationCompleted);
            }
            this.InvokeAsync("addOrder", new object[] {
                        ProductID,
                        ProductIDSpecified,
                        CardID,
                        CardIDSpecified,
                        OrderPrice,
                        OrderPriceSpecified,
                        userId,
                        userIdSpecified,
                        productTypeId,
                        productTypeIdSpecified}, this.addOrderOperationCompleted, userState);
        }
        
        private void OnaddOrderOperationCompleted(object arg) {
            if ((this.addOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/updateOrderStatusClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateOrderStatusClient(int orderId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderIdSpecified, int clientStatusId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool clientStatusIdSpecified) {
            this.Invoke("updateOrderStatusClient", new object[] {
                        orderId,
                        orderIdSpecified,
                        clientStatusId,
                        clientStatusIdSpecified});
        }
        
        /// <remarks/>
        public void updateOrderStatusClientAsync(int orderId, bool orderIdSpecified, int clientStatusId, bool clientStatusIdSpecified) {
            this.updateOrderStatusClientAsync(orderId, orderIdSpecified, clientStatusId, clientStatusIdSpecified, null);
        }
        
        /// <remarks/>
        public void updateOrderStatusClientAsync(int orderId, bool orderIdSpecified, int clientStatusId, bool clientStatusIdSpecified, object userState) {
            if ((this.updateOrderStatusClientOperationCompleted == null)) {
                this.updateOrderStatusClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateOrderStatusClientOperationCompleted);
            }
            this.InvokeAsync("updateOrderStatusClient", new object[] {
                        orderId,
                        orderIdSpecified,
                        clientStatusId,
                        clientStatusIdSpecified}, this.updateOrderStatusClientOperationCompleted, userState);
        }
        
        private void OnupdateOrderStatusClientOperationCompleted(object arg) {
            if ((this.updateOrderStatusClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateOrderStatusClientCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/updateOrderStatusBackend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateOrderStatusBackend(int orderId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderIdSpecified, int backEndStatusId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool backEndStatusIdSpecified) {
            this.Invoke("updateOrderStatusBackend", new object[] {
                        orderId,
                        orderIdSpecified,
                        backEndStatusId,
                        backEndStatusIdSpecified});
        }
        
        /// <remarks/>
        public void updateOrderStatusBackendAsync(int orderId, bool orderIdSpecified, int backEndStatusId, bool backEndStatusIdSpecified) {
            this.updateOrderStatusBackendAsync(orderId, orderIdSpecified, backEndStatusId, backEndStatusIdSpecified, null);
        }
        
        /// <remarks/>
        public void updateOrderStatusBackendAsync(int orderId, bool orderIdSpecified, int backEndStatusId, bool backEndStatusIdSpecified, object userState) {
            if ((this.updateOrderStatusBackendOperationCompleted == null)) {
                this.updateOrderStatusBackendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateOrderStatusBackendOperationCompleted);
            }
            this.InvokeAsync("updateOrderStatusBackend", new object[] {
                        orderId,
                        orderIdSpecified,
                        backEndStatusId,
                        backEndStatusIdSpecified}, this.updateOrderStatusBackendOperationCompleted, userState);
        }
        
        private void OnupdateOrderStatusBackendOperationCompleted(object arg) {
            if ((this.updateOrderStatusBackendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateOrderStatusBackendCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getAllOders", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WareHouseSchool_Service")]
        public Order[] getAllOders() {
            object[] results = this.Invoke("getAllOders", new object[0]);
            return ((Order[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllOdersAsync() {
            this.getAllOdersAsync(null);
        }
        
        /// <remarks/>
        public void getAllOdersAsync(object userState) {
            if ((this.getAllOdersOperationCompleted == null)) {
                this.getAllOdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllOdersOperationCompleted);
            }
            this.InvokeAsync("getAllOders", new object[0], this.getAllOdersOperationCompleted, userState);
        }
        
        private void OngetAllOdersOperationCompleted(object arg) {
            if ((this.getAllOdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllOdersCompleted(this, new getAllOdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getAllOrdersByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WareHouseSchool_Service")]
        public Order[] getAllOrdersByUserId(int userId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool userIdSpecified) {
            object[] results = this.Invoke("getAllOrdersByUserId", new object[] {
                        userId,
                        userIdSpecified});
            return ((Order[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllOrdersByUserIdAsync(int userId, bool userIdSpecified) {
            this.getAllOrdersByUserIdAsync(userId, userIdSpecified, null);
        }
        
        /// <remarks/>
        public void getAllOrdersByUserIdAsync(int userId, bool userIdSpecified, object userState) {
            if ((this.getAllOrdersByUserIdOperationCompleted == null)) {
                this.getAllOrdersByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllOrdersByUserIdOperationCompleted);
            }
            this.InvokeAsync("getAllOrdersByUserId", new object[] {
                        userId,
                        userIdSpecified}, this.getAllOrdersByUserIdOperationCompleted, userState);
        }
        
        private void OngetAllOrdersByUserIdOperationCompleted(object arg) {
            if ((this.getAllOrdersByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllOrdersByUserIdCompleted(this, new getAllOrdersByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getAllClientStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WareHouseSchool_Service")]
        public ClientStatuse[] getAllClientStatus() {
            object[] results = this.Invoke("getAllClientStatus", new object[0]);
            return ((ClientStatuse[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllClientStatusAsync() {
            this.getAllClientStatusAsync(null);
        }
        
        /// <remarks/>
        public void getAllClientStatusAsync(object userState) {
            if ((this.getAllClientStatusOperationCompleted == null)) {
                this.getAllClientStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllClientStatusOperationCompleted);
            }
            this.InvokeAsync("getAllClientStatus", new object[0], this.getAllClientStatusOperationCompleted, userState);
        }
        
        private void OngetAllClientStatusOperationCompleted(object arg) {
            if ((this.getAllClientStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllClientStatusCompleted(this, new getAllClientStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getAllBackEndStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WareHouseSchool_Service")]
        public BackEndStatus[] getAllBackEndStatus() {
            object[] results = this.Invoke("getAllBackEndStatus", new object[0]);
            return ((BackEndStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllBackEndStatusAsync() {
            this.getAllBackEndStatusAsync(null);
        }
        
        /// <remarks/>
        public void getAllBackEndStatusAsync(object userState) {
            if ((this.getAllBackEndStatusOperationCompleted == null)) {
                this.getAllBackEndStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllBackEndStatusOperationCompleted);
            }
            this.InvokeAsync("getAllBackEndStatus", new object[0], this.getAllBackEndStatusOperationCompleted, userState);
        }
        
        private void OngetAllBackEndStatusOperationCompleted(object arg) {
            if ((this.getAllBackEndStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllBackEndStatusCompleted(this, new getAllBackEndStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WareHouseSchool_Service")]
    public partial class User {
        
        private string adressField;
        
        private string authenticationLevelField;
        
        private string contactNumberField;
        
        private string emailAdressField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string passwordField;
        
        private int userIdField;
        
        private bool userIdFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Adress {
            get {
                return this.adressField;
            }
            set {
                this.adressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string authenticationLevel {
            get {
                return this.authenticationLevelField;
            }
            set {
                this.authenticationLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contactNumber {
            get {
                return this.contactNumberField;
            }
            set {
                this.contactNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string emailAdress {
            get {
                return this.emailAdressField;
            }
            set {
                this.emailAdressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public int userId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool userIdSpecified {
            get {
                return this.userIdFieldSpecified;
            }
            set {
                this.userIdFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WareHouseSchool_Service")]
    public partial class BackEndStatus {
        
        private int backEndStatusIdField;
        
        private bool backEndStatusIdFieldSpecified;
        
        private string backEndStatusNameField;
        
        /// <remarks/>
        public int BackEndStatusId {
            get {
                return this.backEndStatusIdField;
            }
            set {
                this.backEndStatusIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BackEndStatusIdSpecified {
            get {
                return this.backEndStatusIdFieldSpecified;
            }
            set {
                this.backEndStatusIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BackEndStatusName {
            get {
                return this.backEndStatusNameField;
            }
            set {
                this.backEndStatusNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WareHouseSchool_Service")]
    public partial class ClientStatuse {
        
        private int clientStatusIdField;
        
        private bool clientStatusIdFieldSpecified;
        
        private string clientStatusNameField;
        
        /// <remarks/>
        public int ClientStatusId {
            get {
                return this.clientStatusIdField;
            }
            set {
                this.clientStatusIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClientStatusIdSpecified {
            get {
                return this.clientStatusIdFieldSpecified;
            }
            set {
                this.clientStatusIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ClientStatusName {
            get {
                return this.clientStatusNameField;
            }
            set {
                this.clientStatusNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WareHouseSchool_Service")]
    public partial class Order {
        
        private int backEndStatusIdField;
        
        private bool backEndStatusIdFieldSpecified;
        
        private System.Nullable<int> cardIDField;
        
        private bool cardIDFieldSpecified;
        
        private int clientStatusIdField;
        
        private bool clientStatusIdFieldSpecified;
        
        private System.DateTime orderDateField;
        
        private bool orderDateFieldSpecified;
        
        private int orderIdField;
        
        private bool orderIdFieldSpecified;
        
        private decimal orderPriceField;
        
        private bool orderPriceFieldSpecified;
        
        private int productIDField;
        
        private bool productIDFieldSpecified;
        
        private System.Nullable<int> productTypeIdField;
        
        private bool productTypeIdFieldSpecified;
        
        private System.Nullable<int> userIdField;
        
        private bool userIdFieldSpecified;
        
        /// <remarks/>
        public int BackEndStatusId {
            get {
                return this.backEndStatusIdField;
            }
            set {
                this.backEndStatusIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BackEndStatusIdSpecified {
            get {
                return this.backEndStatusIdFieldSpecified;
            }
            set {
                this.backEndStatusIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CardID {
            get {
                return this.cardIDField;
            }
            set {
                this.cardIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CardIDSpecified {
            get {
                return this.cardIDFieldSpecified;
            }
            set {
                this.cardIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ClientStatusId {
            get {
                return this.clientStatusIdField;
            }
            set {
                this.clientStatusIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClientStatusIdSpecified {
            get {
                return this.clientStatusIdFieldSpecified;
            }
            set {
                this.clientStatusIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OrderDate {
            get {
                return this.orderDateField;
            }
            set {
                this.orderDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrderDateSpecified {
            get {
                return this.orderDateFieldSpecified;
            }
            set {
                this.orderDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int OrderId {
            get {
                return this.orderIdField;
            }
            set {
                this.orderIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrderIdSpecified {
            get {
                return this.orderIdFieldSpecified;
            }
            set {
                this.orderIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal OrderPrice {
            get {
                return this.orderPriceField;
            }
            set {
                this.orderPriceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrderPriceSpecified {
            get {
                return this.orderPriceFieldSpecified;
            }
            set {
                this.orderPriceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ProductID {
            get {
                return this.productIDField;
            }
            set {
                this.productIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProductIDSpecified {
            get {
                return this.productIDFieldSpecified;
            }
            set {
                this.productIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ProductTypeId {
            get {
                return this.productTypeIdField;
            }
            set {
                this.productTypeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProductTypeIdSpecified {
            get {
                return this.productTypeIdFieldSpecified;
            }
            set {
                this.productTypeIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserIdSpecified {
            get {
                return this.userIdFieldSpecified;
            }
            set {
                this.userIdFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WareHouseSchool_Service")]
    public partial class ProductCard {
        
        private int cardIdField;
        
        private bool cardIdFieldSpecified;
        
        private System.DateTime dateTimeField;
        
        private bool dateTimeFieldSpecified;
        
        private int productIdField;
        
        private bool productIdFieldSpecified;
        
        private int productTypeIdField;
        
        private bool productTypeIdFieldSpecified;
        
        private System.Nullable<int> quantityField;
        
        private bool quantityFieldSpecified;
        
        private int userIdField;
        
        private bool userIdFieldSpecified;
        
        private string isRemovedField;
        
        private System.Nullable<System.DateTime> isRemovedDateField;
        
        private bool isRemovedDateFieldSpecified;
        
        private System.Nullable<decimal> productPriceField;
        
        private bool productPriceFieldSpecified;
        
        /// <remarks/>
        public int CardId {
            get {
                return this.cardIdField;
            }
            set {
                this.cardIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CardIdSpecified {
            get {
                return this.cardIdFieldSpecified;
            }
            set {
                this.cardIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateTimeSpecified {
            get {
                return this.dateTimeFieldSpecified;
            }
            set {
                this.dateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProductIdSpecified {
            get {
                return this.productIdFieldSpecified;
            }
            set {
                this.productIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ProductTypeId {
            get {
                return this.productTypeIdField;
            }
            set {
                this.productTypeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProductTypeIdSpecified {
            get {
                return this.productTypeIdFieldSpecified;
            }
            set {
                this.productTypeIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QuantitySpecified {
            get {
                return this.quantityFieldSpecified;
            }
            set {
                this.quantityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserIdSpecified {
            get {
                return this.userIdFieldSpecified;
            }
            set {
                this.userIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string isRemoved {
            get {
                return this.isRemovedField;
            }
            set {
                this.isRemovedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> isRemovedDate {
            get {
                return this.isRemovedDateField;
            }
            set {
                this.isRemovedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isRemovedDateSpecified {
            get {
                return this.isRemovedDateFieldSpecified;
            }
            set {
                this.isRemovedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> productPrice {
            get {
                return this.productPriceField;
            }
            set {
                this.productPriceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool productPriceSpecified {
            get {
                return this.productPriceFieldSpecified;
            }
            set {
                this.productPriceFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WareHouseSchool_Service")]
    public partial class Product {
        
        private System.Nullable<System.DateTime> dateField;
        
        private bool dateFieldSpecified;
        
        private string descriptionField;
        
        private string image64StringField;
        
        private decimal priceField;
        
        private bool priceFieldSpecified;
        
        private int productIdField;
        
        private bool productIdFieldSpecified;
        
        private int productTypeIdField;
        
        private bool productTypeIdFieldSpecified;
        
        private int quantityField;
        
        private bool quantityFieldSpecified;
        
        private string isRemovedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateSpecified {
            get {
                return this.dateFieldSpecified;
            }
            set {
                this.dateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Image64String {
            get {
                return this.image64StringField;
            }
            set {
                this.image64StringField = value;
            }
        }
        
        /// <remarks/>
        public decimal Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PriceSpecified {
            get {
                return this.priceFieldSpecified;
            }
            set {
                this.priceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProductIdSpecified {
            get {
                return this.productIdFieldSpecified;
            }
            set {
                this.productIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ProductTypeId {
            get {
                return this.productTypeIdField;
            }
            set {
                this.productTypeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProductTypeIdSpecified {
            get {
                return this.productTypeIdFieldSpecified;
            }
            set {
                this.productTypeIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QuantitySpecified {
            get {
                return this.quantityFieldSpecified;
            }
            set {
                this.quantityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string isRemoved {
            get {
                return this.isRemovedField;
            }
            set {
                this.isRemovedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WareHouseSchool_Service")]
    public partial class ProductType {
        
        private string productCategoryField;
        
        private int productTypeIdField;
        
        private bool productTypeIdFieldSpecified;
        
        private string productTypeNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string productCategory {
            get {
                return this.productCategoryField;
            }
            set {
                this.productCategoryField = value;
            }
        }
        
        /// <remarks/>
        public int productTypeId {
            get {
                return this.productTypeIdField;
            }
            set {
                this.productTypeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool productTypeIdSpecified {
            get {
                return this.productTypeIdFieldSpecified;
            }
            set {
                this.productTypeIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string productTypeName {
            get {
                return this.productTypeNameField;
            }
            set {
                this.productTypeNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void RegisterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool loginResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool loginResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int userID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public bool userIDSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string authinticationLevel {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void getUsersCompletedEventHandler(object sender, getUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void addProductTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void updateProductCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void deleteProductCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void getAllProductTypesCompletedEventHandler(object sender, getAllProductTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllProductTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllProductTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void addProductCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void getAllProductsCompletedEventHandler(object sender, getAllProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void getAllProductsByTypeIdCompletedEventHandler(object sender, getAllProductsByTypeIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllProductsByTypeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllProductsByTypeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void addProductToCardCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void removeProductFromCardCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void getAllProductsInCardCompletedEventHandler(object sender, getAllProductsInCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllProductsInCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllProductsInCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductCard[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductCard[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void getAllProductsInCardByProducIdCompletedEventHandler(object sender, getAllProductsInCardByProducIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllProductsInCardByProducIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllProductsInCardByProducIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductCard[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductCard[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void getAllProductsInCardByUserIdCompletedEventHandler(object sender, getAllProductsInCardByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllProductsInCardByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllProductsInCardByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductCard[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductCard[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void getAllProductsInCardByProductTypeIdCompletedEventHandler(object sender, getAllProductsInCardByProductTypeIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllProductsInCardByProductTypeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllProductsInCardByProductTypeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductCard[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductCard[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void addOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void updateOrderStatusClientCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void updateOrderStatusBackendCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void getAllOdersCompletedEventHandler(object sender, getAllOdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllOdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllOdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Order[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Order[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void getAllOrdersByUserIdCompletedEventHandler(object sender, getAllOrdersByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllOrdersByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllOrdersByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Order[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Order[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void getAllClientStatusCompletedEventHandler(object sender, getAllClientStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllClientStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllClientStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ClientStatuse[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClientStatuse[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void getAllBackEndStatusCompletedEventHandler(object sender, getAllBackEndStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllBackEndStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllBackEndStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BackEndStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BackEndStatus[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591